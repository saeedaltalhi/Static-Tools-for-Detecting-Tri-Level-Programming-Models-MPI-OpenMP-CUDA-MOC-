#include<omp.h>
#include<stdlib.h>

int main(void)
{
	int vecSum = 0;
	int vecA[100];
	int vecB[100];	
	int resVec[100];	

	// Lock for synchronization
	omp_lock_t lock;
	omp_init_lock(&lock);	
	omp_set_num_threads(4);
	bool flag = true;

#	pragma omp for
	for (int i = 0; i < 100; i++)
	{
		while (flag) {
		{
			vecA[i] = (i * 3 * 5);
			vecB[i] = (i * 2 * 4);
			resVec[i] = vecA[i] * vecB[i];	
			omp_set_lock(&lock);
			vecSum = vecA[i] + vecB[i];
			omp_unset_lock(&lock);
		}			
	}

	omp_destroy_lock(&lock);
	printf("Sum = %d\n", vecSum);
	return 0;
}